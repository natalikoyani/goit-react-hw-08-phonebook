{"version":3,"file":"static/js/680.4d070cb5.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  max-width: 250px;\n  margin-bottom: 50px;\n  font-weight: 500;\n`;\n\nexport const StyledLabel = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n`;\n\nexport const StyledButton = styled.button`\n  width: 115px;\n  background-color: transparent;\n  border: 0.1px solid lightgray;\n  border-radius: 3px;\n  box-shadow: 1px 1px 2px 0px lightgray;\n\n  &:active {\n    background-color: blue;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  border: 0.1px solid lightgray;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 3px 2px lightblue;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: red;\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledButton,\n  StyledField,\n  StyledErrorMessage,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst phonebookSchema = Yup.object().shape({\n  name: Yup.string().required('This field is required!'),\n  number: Yup.string()\n    .matches(/^[0-9-+]+$/, 'Please enter digits, \"-\" or \"+\"')\n    .required('This field is required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={phonebookSchema}\n      onSubmit={(values, actions) => {\n        if (\n          contacts.some(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          )\n        ) {\n          return alert(`${values.name} is already in contacts!`);\n        }\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <StyledLabel>\n          Name\n          <StyledField name=\"name\" />\n          <StyledErrorMessage name=\"name\" component=\"div\" />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledField name=\"number\" />\n          <StyledErrorMessage name=\"number\" component=\"div\" />\n        </StyledLabel>\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n`;\n\nexport const StyledButton = styled.button`\n  width: auto;\n  margin-left: 10px;\n  background-color: transparent;\n  border: 0.1px solid lightgray;\n  border-radius: 3px;\n  box-shadow: 1px 1px 2px 0px lightgray;\n\n  &:active {\n    background-color: blue;\n  }\n`;","import { nanoid } from 'nanoid';\nimport { StyledList, StyledButton } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <StyledList>\n      {filteredContacts.map(contact => {\n        return (\n          <li key={nanoid()}>\n            {contact.name}: {contact.number}{' '}\n            <StyledButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </StyledButton>\n          </li>\n        );\n      })}\n    </StyledList>\n  );\n};\n","import { BallTriangle } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","StyledButton","_templateObject3","StyledField","Field","_templateObject4","StyledErrorMessage","ErrorMessage","_templateObject5","phonebookSchema","Yup","shape","name","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","contact","toLowerCase","alert","concat","addContact","resetForm","children","_jsxs","component","type","StyledList","ContactList","filteredContacts","includes","map","onClick","deleteContact","id","nanoid","Loader","style","position","top","left","transform","BallTriangle","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}