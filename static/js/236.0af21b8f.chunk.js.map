{"version":3,"file":"static/js/236.0af21b8f.chunk.js","mappings":"mPAKMA,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KAAaG,SAAS,2BAC5BC,MAAOJ,EAAAA,KAAaI,QAAQD,SAAS,2BACrCE,SAAUL,EAAAA,KACPM,IAAI,EAAG,4CACPH,SAAS,6BAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACAC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEV,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDQ,iBAAkBd,EAClBe,SAfmB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BT,GACEU,EAAAA,EAAAA,IAAS,CACPhB,KAAMa,EAAOb,KACbE,MAAOW,EAAOX,MACdC,SAAUU,EAAOV,YAGrBY,GACF,EAMyBE,UAEvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,aAAa,MAAKH,SAAA,EACtBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,QAELT,EAAAA,EAAAA,KAACa,EAAAA,GAAK,CAACrB,KAAK,UACZQ,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACtB,KAAK,OAAOuB,UAAU,YAEtCL,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELT,EAAAA,EAAAA,KAACa,EAAAA,GAAK,CAACrB,KAAK,WACZQ,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACtB,KAAK,QAAQuB,UAAU,YAEvCL,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELT,EAAAA,EAAAA,KAACa,EAAAA,GAAK,CAACrB,KAAK,cACZQ,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACtB,KAAK,WAAWuB,UAAU,YAE1Cf,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAAQP,SAAC,iBAI5B,EClDe,SAASQ,IACtB,OACEP,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAAT,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,oBAETT,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string().required('This field is required!'),\n  email: Yup.string().email().required('This field is required!'),\n  password: Yup.string()\n    .min(7, 'Password should be minimum 7 characters!')\n    .required('This field is required!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n  <Formik\n    initialValues={{ name: '', email: '', password: '' }}\n    validationSchema={registerSchema}\n    onSubmit={handleSubmit}\n  >\n    <Form autoComplete=\"off\">\n      <label>\n        Name\n        <Field name=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n      </label>\n      <label>\n        Email\n        <Field name=\"email\" />\n        <ErrorMessage name=\"email\" component=\"div\" />\n      </label>\n      <label>\n        Password\n        <Field name=\"password\" />\n        <ErrorMessage name=\"password\" component=\"div\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </Form>\n  </Formik>\n);\n};","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["registerSchema","Yup","shape","name","required","email","password","min","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","register","children","_jsxs","Form","autoComplete","Field","ErrorMessage","component","type","Register","Helmet"],"sourceRoot":""}